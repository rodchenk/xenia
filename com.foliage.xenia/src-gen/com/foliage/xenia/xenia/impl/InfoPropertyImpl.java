/**
 * generated by Xtext 2.17.0
 */
package com.foliage.xenia.xenia.impl;

import com.foliage.xenia.xenia.InfoEntity;
import com.foliage.xenia.xenia.InfoProperty;
import com.foliage.xenia.xenia.Site;
import com.foliage.xenia.xenia.XeniaPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Info Property</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.foliage.xenia.xenia.impl.InfoPropertyImpl#getPage <em>Page</em>}</li>
 *   <li>{@link com.foliage.xenia.xenia.impl.InfoPropertyImpl#getEntities <em>Entities</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InfoPropertyImpl extends MinimalEObjectImpl.Container implements InfoProperty
{
  /**
   * The cached value of the '{@link #getPage() <em>Page</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPage()
   * @generated
   * @ordered
   */
  protected Site page;

  /**
   * The cached value of the '{@link #getEntities() <em>Entities</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntities()
   * @generated
   * @ordered
   */
  protected EList<InfoEntity> entities;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InfoPropertyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XeniaPackage.Literals.INFO_PROPERTY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Site getPage()
  {
    return page;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPage(Site newPage, NotificationChain msgs)
  {
    Site oldPage = page;
    page = newPage;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XeniaPackage.INFO_PROPERTY__PAGE, oldPage, newPage);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPage(Site newPage)
  {
    if (newPage != page)
    {
      NotificationChain msgs = null;
      if (page != null)
        msgs = ((InternalEObject)page).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XeniaPackage.INFO_PROPERTY__PAGE, null, msgs);
      if (newPage != null)
        msgs = ((InternalEObject)newPage).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XeniaPackage.INFO_PROPERTY__PAGE, null, msgs);
      msgs = basicSetPage(newPage, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XeniaPackage.INFO_PROPERTY__PAGE, newPage, newPage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InfoEntity> getEntities()
  {
    if (entities == null)
    {
      entities = new EObjectContainmentEList<InfoEntity>(InfoEntity.class, this, XeniaPackage.INFO_PROPERTY__ENTITIES);
    }
    return entities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case XeniaPackage.INFO_PROPERTY__PAGE:
        return basicSetPage(null, msgs);
      case XeniaPackage.INFO_PROPERTY__ENTITIES:
        return ((InternalEList<?>)getEntities()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XeniaPackage.INFO_PROPERTY__PAGE:
        return getPage();
      case XeniaPackage.INFO_PROPERTY__ENTITIES:
        return getEntities();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XeniaPackage.INFO_PROPERTY__PAGE:
        setPage((Site)newValue);
        return;
      case XeniaPackage.INFO_PROPERTY__ENTITIES:
        getEntities().clear();
        getEntities().addAll((Collection<? extends InfoEntity>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XeniaPackage.INFO_PROPERTY__PAGE:
        setPage((Site)null);
        return;
      case XeniaPackage.INFO_PROPERTY__ENTITIES:
        getEntities().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XeniaPackage.INFO_PROPERTY__PAGE:
        return page != null;
      case XeniaPackage.INFO_PROPERTY__ENTITIES:
        return entities != null && !entities.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //InfoPropertyImpl
