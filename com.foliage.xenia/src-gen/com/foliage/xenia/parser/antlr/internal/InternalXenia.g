/*
 * generated by Xtext 2.17.0
 */
grammar InternalXenia;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.foliage.xenia.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.foliage.xenia.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.foliage.xenia.services.XeniaGrammarAccess;

}

@parser::members {

 	private XeniaGrammarAccess grammarAccess;

    public InternalXeniaParser(TokenStream input, XeniaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected XeniaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getHeadersHeaderParserRuleCall_0_0());
				}
				lv_headers_0_0=ruleHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"headers",
						lv_headers_0_0,
						"com.foliage.xenia.Xenia.Header");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getEntitiesEntityParserRuleCall_1_0());
				}
				lv_entities_1_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"entities",
						lv_entities_1_0,
						"com.foliage.xenia.Xenia.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getMapped_entitiesMappedEntityParserRuleCall_2_0());
				}
				lv_mapped_entities_2_0=ruleMappedEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"mapped_entities",
						lv_mapped_entities_2_0,
						"com.foliage.xenia.Xenia.MappedEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleHeader
entryRuleHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeaderRule()); }
	iv_ruleHeader=ruleHeader
	{ $current=$iv_ruleHeader.current; }
	EOF;

// Rule Header
ruleHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='app'
		{
			newLeafNode(otherlv_0, grammarAccess.getHeaderAccess().getAppKeyword_0());
		}
		(
			(
				lv_appName_1_0=RULE_ID
				{
					newLeafNode(lv_appName_1_0, grammarAccess.getHeaderAccess().getAppNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHeaderRule());
					}
					setWithLastConsumed(
						$current,
						"appName",
						lv_appName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='has'
		{
			newLeafNode(otherlv_2, grammarAccess.getHeaderAccess().getHasKeyword_2());
		}
		otherlv_3='pages'
		{
			newLeafNode(otherlv_3, grammarAccess.getHeaderAccess().getPagesKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getHeaderAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHeaderAccess().getSitesSuperSiteParserRuleCall_5_0());
				}
				lv_sites_5_0=ruleSuperSite
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeaderRule());
					}
					add(
						$current,
						"sites",
						lv_sites_5_0,
						"com.foliage.xenia.Xenia.SuperSite");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getHeaderAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHeaderAccess().getSitesSuperSiteParserRuleCall_6_1_0());
					}
					lv_sites_7_0=ruleSuperSite
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHeaderRule());
						}
						add(
							$current,
							"sites",
							lv_sites_7_0,
							"com.foliage.xenia.Xenia.SuperSite");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=']'
		{
			newLeafNode(otherlv_8, grammarAccess.getHeaderAccess().getRightSquareBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='with'
			{
				newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getWithKeyword_0_0());
			}
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getColonKeyword_0_1());
			}
			(
				(
					lv_tech_2_0=RULE_STRING
					{
						newLeafNode(lv_tech_2_0, grammarAccess.getEntityAccess().getTechSTRINGTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
						setWithLastConsumed(
							$current,
							"tech",
							lv_tech_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			otherlv_3='xml'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getXmlKeyword_1_0());
			}
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getColonKeyword_1_1());
			}
			(
				(
					lv_path_5_0=RULE_STRING
					{
						newLeafNode(lv_path_5_0, grammarAccess.getEntityAccess().getPathSTRINGTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
						setWithLastConsumed(
							$current,
							"path",
							lv_path_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			otherlv_6='mode'
			{
				newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getModeKeyword_2_0());
			}
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getColonKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getModeModeEnumRuleCall_2_2_0());
					}
					lv_mode_8_0=ruleMode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						set(
							$current,
							"mode",
							lv_mode_8_0,
							"com.foliage.xenia.Xenia.Mode");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSuperSite
entryRuleSuperSite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSuperSiteRule()); }
	iv_ruleSuperSite=ruleSuperSite
	{ $current=$iv_ruleSuperSite.current; }
	EOF;

// Rule SuperSite
ruleSuperSite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSuperSiteAccess().getSiteParserRuleCall_0());
		}
		this_Site_0=ruleSite
		{
			$current = $this_Site_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSuperSiteAccess().getSiteWithModalParserRuleCall_1());
		}
		this_SiteWithModal_1=ruleSiteWithModal
		{
			$current = $this_SiteWithModal_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSiteWithModal
entryRuleSiteWithModal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSiteWithModalRule()); }
	iv_ruleSiteWithModal=ruleSiteWithModal
	{ $current=$iv_ruleSiteWithModal.current; }
	EOF;

// Rule SiteWithModal
ruleSiteWithModal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getSiteWithModalAccess().getCommercialAtKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSiteWithModalAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSiteWithModalRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getSiteWithModalAccess().getWithKeyword_2());
		}
		otherlv_3='modal'
		{
			newLeafNode(otherlv_3, grammarAccess.getSiteWithModalAccess().getModalKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getSiteWithModalAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSiteWithModalAccess().getSitesSuperSiteParserRuleCall_5_0());
				}
				lv_sites_5_0=ruleSuperSite
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSiteWithModalRule());
					}
					add(
						$current,
						"sites",
						lv_sites_5_0,
						"com.foliage.xenia.Xenia.SuperSite");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getSiteWithModalAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSiteWithModalAccess().getSitesSuperSiteParserRuleCall_6_1_0());
					}
					lv_sites_7_0=ruleSuperSite
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSiteWithModalRule());
						}
						add(
							$current,
							"sites",
							lv_sites_7_0,
							"com.foliage.xenia.Xenia.SuperSite");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getSiteWithModalAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleMappedEntity
entryRuleMappedEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappedEntityRule()); }
	iv_ruleMappedEntity=ruleMappedEntity
	{ $current=$iv_ruleMappedEntity.current; }
	EOF;

// Rule MappedEntity
ruleMappedEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='info'
			{
				newLeafNode(otherlv_0, grammarAccess.getMappedEntityAccess().getInfoKeyword_0_0());
			}
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getMappedEntityAccess().getColonKeyword_0_1());
			}
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getMappedEntityAccess().getLeftSquareBracketKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMappedEntityAccess().getInfoPropsInfoPropertyParserRuleCall_0_3_0());
					}
					lv_infoProps_3_0=ruleInfoProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMappedEntityRule());
						}
						add(
							$current,
							"infoProps",
							lv_infoProps_3_0,
							"com.foliage.xenia.Xenia.InfoProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMappedEntityAccess().getCommaKeyword_0_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMappedEntityAccess().getInfoPropsInfoPropertyParserRuleCall_0_4_1_0());
						}
						lv_infoProps_5_0=ruleInfoProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMappedEntityRule());
							}
							add(
								$current,
								"infoProps",
								lv_infoProps_5_0,
								"com.foliage.xenia.Xenia.InfoProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getMappedEntityAccess().getRightSquareBracketKeyword_0_5());
			}
		)
		    |
		(
			otherlv_7='map'
			{
				newLeafNode(otherlv_7, grammarAccess.getMappedEntityAccess().getMapKeyword_1_0());
			}
			otherlv_8=':'
			{
				newLeafNode(otherlv_8, grammarAccess.getMappedEntityAccess().getColonKeyword_1_1());
			}
			otherlv_9='['
			{
				newLeafNode(otherlv_9, grammarAccess.getMappedEntityAccess().getLeftSquareBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMappedEntityAccess().getLinkedPropsLinkedPropertyParserRuleCall_1_3_0());
					}
					lv_linkedProps_10_0=ruleLinkedProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMappedEntityRule());
						}
						add(
							$current,
							"linkedProps",
							lv_linkedProps_10_0,
							"com.foliage.xenia.Xenia.LinkedProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getMappedEntityAccess().getCommaKeyword_1_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMappedEntityAccess().getLinkedPropsLinkedPropertyParserRuleCall_1_4_1_0());
						}
						lv_linkedProps_12_0=ruleLinkedProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMappedEntityRule());
							}
							add(
								$current,
								"linkedProps",
								lv_linkedProps_12_0,
								"com.foliage.xenia.Xenia.LinkedProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13=']'
			{
				newLeafNode(otherlv_13, grammarAccess.getMappedEntityAccess().getRightSquareBracketKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuleInfoProperty
entryRuleInfoProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInfoPropertyRule()); }
	iv_ruleInfoProperty=ruleInfoProperty
	{ $current=$iv_ruleInfoProperty.current; }
	EOF;

// Rule InfoProperty
ruleInfoProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInfoPropertyRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getInfoPropertyAccess().getPageSiteCrossReference_0_0());
				}
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getInfoPropertyAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInfoPropertyAccess().getEntitiesInfoEntityParserRuleCall_2_0());
				}
				lv_entities_2_0=ruleInfoEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInfoPropertyRule());
					}
					add(
						$current,
						"entities",
						lv_entities_2_0,
						"com.foliage.xenia.Xenia.InfoEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getInfoPropertyAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInfoPropertyAccess().getEntitiesInfoEntityParserRuleCall_3_1_0());
					}
					lv_entities_4_0=ruleInfoEntity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInfoPropertyRule());
						}
						add(
							$current,
							"entities",
							lv_entities_4_0,
							"com.foliage.xenia.Xenia.InfoEntity");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleInfoEntity
entryRuleInfoEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInfoEntityRule()); }
	iv_ruleInfoEntity=ruleInfoEntity
	{ $current=$iv_ruleInfoEntity.current; }
	EOF;

// Rule InfoEntity
ruleInfoEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInfoEntityAccess().getEntriesInfoEntryEnumRuleCall_0_0());
				}
				lv_entries_0_0=ruleInfoEntry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInfoEntityRule());
					}
					add(
						$current,
						"entries",
						lv_entries_0_0,
						"com.foliage.xenia.Xenia.InfoEntry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getInfoEntityAccess().getColonKeyword_1());
		}
		(
			(
				lv_infoValue_2_0=RULE_STRING
				{
					newLeafNode(lv_infoValue_2_0, grammarAccess.getInfoEntityAccess().getInfoValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInfoEntityRule());
					}
					setWithLastConsumed(
						$current,
						"infoValue",
						lv_infoValue_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSite
entryRuleSite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSiteRule()); }
	iv_ruleSite=ruleSite
	{ $current=$iv_ruleSite.current; }
	EOF;

// Rule Site
ruleSite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getSiteAccess().getCommercialAtKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSiteAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSiteRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleLinkedProperty
entryRuleLinkedProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkedPropertyRule()); }
	iv_ruleLinkedProperty=ruleLinkedProperty
	{ $current=$iv_ruleLinkedProperty.current; }
	EOF;

// Rule LinkedProperty
ruleLinkedProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkedPropertyRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getLinkedPropertyAccess().getNameSiteCrossReference_0_0());
				}
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getLinkedPropertyAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getLinkedPropertyAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkedPropertyAccess().getPageRedirectPageParserRuleCall_3_0());
				}
				lv_page_3_0=ruleRedirectPage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkedPropertyRule());
					}
					set(
						$current,
						"page",
						lv_page_3_0,
						"com.foliage.xenia.Xenia.RedirectPage");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getLinkedPropertyAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleRedirectPage
entryRuleRedirectPage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRedirectPageRule()); }
	iv_ruleRedirectPage=ruleRedirectPage
	{ $current=$iv_ruleRedirectPage.current; }
	EOF;

// Rule RedirectPage
ruleRedirectPage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRedirectPageRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRedirectPageAccess().getSiteSiteCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRedirectPageAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRedirectPageRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getRedirectPageAccess().getSiteSiteCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Rule Mode
ruleMode returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='development'
			{
				$current = grammarAccess.getModeAccess().getDEVEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getModeAccess().getDEVEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='production'
			{
				$current = grammarAccess.getModeAccess().getPRODEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getModeAccess().getPRODEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule InfoEntry
ruleInfoEntry returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='mod'
			{
				$current = grammarAccess.getInfoEntryAccess().getMODEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getInfoEntryAccess().getMODEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='freq'
			{
				$current = grammarAccess.getInfoEntryAccess().getFREQEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getInfoEntryAccess().getFREQEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='prio'
			{
				$current = grammarAccess.getInfoEntryAccess().getPRIOEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getInfoEntryAccess().getPRIOEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
