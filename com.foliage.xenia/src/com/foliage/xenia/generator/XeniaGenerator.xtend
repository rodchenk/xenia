/*
 * generated by Xtext 2.17.0
 */
package com.foliage.xenia.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import com.foliage.xenia.xenia.Header
import javax.inject.Inject
import org.eclipse.xtext.naming.IQualifiedNameProvider

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class XeniaGenerator extends AbstractGenerator {
	@Inject extension IQualifiedNameProvider
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
		for(e: resource.allContents.toIterable.filter(Header)){
			fsa.generateFile('test' + '.html', e.compile);
			e.fullyQualifiedName.toString('/');
		}
	}
	
	def CharSequence compile(Header header) '''
		<html>
			<head>
				<title>"«header.appName»"</title>
				<link rel="stylesheet" type="text/css" href="F:/coding/java-workspace/xenia/com.foliage.xenia.resources/default.xenia.css"></link>
			</head>
			<body>
				<b>Hello, World!</b>
				<div style="text-align:center; margin-top:30px">
				<button class="xenia-btn-sm">«header.appName» :)</button>
				</div>
			</body>
		</html>
	'''
	
}
