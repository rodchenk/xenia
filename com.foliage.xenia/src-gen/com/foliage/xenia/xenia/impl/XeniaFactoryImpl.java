/**
 * generated by Xtext 2.17.0
 */
package com.foliage.xenia.xenia.impl;

import com.foliage.xenia.xenia.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class XeniaFactoryImpl extends EFactoryImpl implements XeniaFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static XeniaFactory init()
  {
    try
    {
      XeniaFactory theXeniaFactory = (XeniaFactory)EPackage.Registry.INSTANCE.getEFactory(XeniaPackage.eNS_URI);
      if (theXeniaFactory != null)
      {
        return theXeniaFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new XeniaFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XeniaFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case XeniaPackage.MODEL: return createModel();
      case XeniaPackage.ENTITY: return createEntity();
      case XeniaPackage.MAPPED_ENTITY: return createMappedEntity();
      case XeniaPackage.SITE: return createSite();
      case XeniaPackage.LINKED_PROPERTY: return createLinkedProperty();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MappedEntity createMappedEntity()
  {
    MappedEntityImpl mappedEntity = new MappedEntityImpl();
    return mappedEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Site createSite()
  {
    SiteImpl site = new SiteImpl();
    return site;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LinkedProperty createLinkedProperty()
  {
    LinkedPropertyImpl linkedProperty = new LinkedPropertyImpl();
    return linkedProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public XeniaPackage getXeniaPackage()
  {
    return (XeniaPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static XeniaPackage getPackage()
  {
    return XeniaPackage.eINSTANCE;
  }

} //XeniaFactoryImpl
